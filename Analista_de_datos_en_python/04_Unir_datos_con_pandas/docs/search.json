[
  {
    "objectID": "01_Conceptos_basicos_de_la_fusion_de_datos.html",
    "href": "01_Conceptos_basicos_de_la_fusion_de_datos.html",
    "title": "Conceptos Básicos de la fusión de datos",
    "section": "",
    "text": "Unión interna\nAprende a fusionar datos dispares mediante uniones internas. Combinando información de múltiples fuentes, descubrirás perspectivas convincentes que antes podían estar ocultas. También aprenderás cómo la relación entre esas fuentes, de uno a uno o de uno a muchos, puede afectar a tu resultado.",
    "crumbs": [
      "Capítulos",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Conceptos Básicos de la fusión de datos</span>"
    ]
  },
  {
    "objectID": "01_Conceptos_basicos_de_la_fusion_de_datos.html#unión-interna",
    "href": "01_Conceptos_basicos_de_la_fusion_de_datos.html#unión-interna",
    "title": "Conceptos Básicos de la fusión de datos",
    "section": "",
    "text": "Qué columna elegiremos para fusionar?\nChicago proporciona una lista de propietarios de taxis y vehículos con licencia para operar en la ciudad, por seguridad pública. Tu objetivo es unir dos tablas. Una tabla se llama taxi_owners y contiene información sobre los propietarios de las empresas de taxis, mientras que la otra se llama taxi_vehe incluye información sobre cada vehículo de taxi.\n\nimport pandas as pd\n\n\ntaxi_owners = pd.read_pickle('./data/taxi_owners.p')\ntaxi_owners.head()\n\n\n\n\n\n\n\n\nrid\nvid\nowner\naddress\nzip\n\n\n\n\n0\nT6285\n6285\nAGEAN TAXI LLC\n4536 N. ELSTON AVE.\n60630\n\n\n1\nT4862\n4862\nMANGIB CORP.\n5717 N. WASHTENAW AVE.\n60659\n\n\n2\nT1495\n1495\nFUNRIDE, INC.\n3351 W. ADDISON ST.\n60618\n\n\n3\nT4231\n4231\nALQUSH CORP.\n6611 N. CAMPBELL AVE.\n60645\n\n\n4\nT5971\n5971\nEUNIFFORD INC.\n3351 W. ADDISON ST.\n60618\n\n\n\n\n\n\n\n\ntaxi_veh = pd.read_pickle('./data/taxi_vehicles.p')\ntaxi_veh.head()\n\n\n\n\n\n\n\n\nvid\nmake\nmodel\nyear\nfuel_type\nowner\n\n\n\n\n0\n2767\nTOYOTA\nCAMRY\n2013\nHYBRID\nSEYED M. BADRI\n\n\n1\n1411\nTOYOTA\nRAV4\n2017\nHYBRID\nDESZY CORP.\n\n\n2\n6500\nNISSAN\nSENTRA\n2019\nGASOLINE\nAGAPH CAB CORP\n\n\n3\n2746\nTOYOTA\nCAMRY\n2013\nHYBRID\nMIDWEST CAB CO, INC\n\n\n4\n5922\nTOYOTA\nCAMRY\n2013\nHYBRID\nSUMETTI CAB CO\n\n\n\n\n\n\n\n\nInstrucciones:\nElige una columna que utilizarías para fusionar las dos tablas utilizando el método .merge().\nRespuestas posibles\n\non=‘rid’\non=‘vid’\non=‘year’\non=‘zip’\n\n\n\n\nTu primera unión interna\nTe han encargado que averigües cuáles son los tipos de combustibles más utlizados en los taxis de Chicago. Para completar el análisis, tienes que fusionar las tablas taxi_owners y taxi_veh en la columna vid. A continuación, puedes utilizar la tabla combinada junto con el método .values_counts() para encontrar el fuel_type más común.\n\nInstrucciones:\n\nFusiona taxi_owners con taxi_veh en la columna vid y guarda el resultado en taxi_own_veh.\n\n\n# Merge the taxi_owners and taxi_veh tables\ntaxi_own_veh = taxi_owners.merge(taxi_veh, on='vid')\ntaxi_own_veh.head()\n\n# Print the column names of taxi_own_veh\nprint(taxi_own_veh.columns)\n\nIndex(['rid', 'vid', 'owner_x', 'address', 'zip', 'make', 'model', 'year',\n       'fuel_type', 'owner_y'],\n      dtype='object')\n\n\n\nEstablece los sufijos izquierdo y derecho de la tabla para las columnas solapadas de la fusión en _own y _veh, respectivamente.\n\n\n# Merge the taxi_owners and taxi_veh tables setting a suffix\ntaxi_own_veh = taxi_owners.merge(taxi_veh, on='vid', suffixes=('_own', '_veh'))\ntaxi_own_veh.head()\n\n# Print the column names of taxi_own_veh\nprint(taxi_own_veh.columns)\n\nIndex(['rid', 'vid', 'owner_own', 'address', 'zip', 'make', 'model', 'year',\n       'fuel_type', 'owner_veh'],\n      dtype='object')\n\n\n\nSelecciona la columna fuel_type de taxi_own_veh e imprime value_counts() para encontrar los fuel_type más utilizados.\n\n\n# Merge the taxi_owners and taxi_veh tables setting a suffix\ntaxi_own_veh = taxi_owners.merge(taxi_veh, on='vid', suffixes=('_own', '_veh'))\n\n# Print the value_counts to find the most popular fuel_type\nprint(taxi_own_veh['fuel_type'].value_counts())\n\nfuel_type\nHYBRID                    2792\nGASOLINE                   611\nFLEX FUEL                   89\nCOMPRESSED NATURAL GAS      27\nName: count, dtype: int64\n\n\n\n\n\nUniones internas y número de filas devueltas\nTodas las fusiones que has estudiado hasta ahora se llaman uniones internas. Es necesario comprender que las uniones internas solo devuelven las filas con valores coincidentes en ambas tablas. Explorarás esto más a fondo revisando la fusión entre las tablas wards y census, y comparándola después con fusiones de copias de estas tablas ligeramente alteradas, denominadas wards_altered y census_altered. La primera fila de la columna wards se ha modificado en las tablas alteradas. Examinarás cómo afecta esto a la fusión entre ellos.\n\nwards = pd.read_pickle('./data/ward.p')\nwards.head()\n\n\n\n\n\n\n\n\nward\nalderman\naddress\nzip\n\n\n\n\n0\n1\nProco \"Joe\" Moreno\n2058 NORTH WESTERN AVENUE\n60647\n\n\n1\n2\nBrian Hopkins\n1400 NORTH ASHLAND AVENUE\n60622\n\n\n2\n3\nPat Dowell\n5046 SOUTH STATE STREET\n60609\n\n\n3\n4\nWilliam D. Burns\n435 EAST 35TH STREET, 1ST FLOOR\n60616\n\n\n4\n5\nLeslie A. Hairston\n2325 EAST 71ST STREET\n60649\n\n\n\n\n\n\n\n\ncensus = pd.read_pickle('./data/census.p')\ncensus.head()\n\n\n\n\n\n\n\n\nward\npop_2000\npop_2010\nchange\naddress\nzip\n\n\n\n\n0\n1\n52951\n56149\n6%\n2765 WEST SAINT MARY STREET\n60647\n\n\n1\n2\n54361\n55805\n3%\nWM WASTE MANAGEMENT 1500\n60622\n\n\n2\n3\n40385\n53039\n31%\n17 EAST 38TH STREET\n60653\n\n\n3\n4\n51953\n54589\n5%\n31ST ST HARBOR BUILDING LAKEFRONT TRAIL\n60653\n\n\n4\n5\n55302\n51455\n-7%\nJACKSON PARK LAGOON SOUTH CORNELL DRIVE\n60637\n\n\n\n\n\n\n\n\nwards_altered = wards.copy()\nwards_altered.loc[0, 'ward'] = 61\nwards_altered.head()\n\n\n\n\n\n\n\n\nward\nalderman\naddress\nzip\n\n\n\n\n0\n61\nProco \"Joe\" Moreno\n2058 NORTH WESTERN AVENUE\n60647\n\n\n1\n2\nBrian Hopkins\n1400 NORTH ASHLAND AVENUE\n60622\n\n\n2\n3\nPat Dowell\n5046 SOUTH STATE STREET\n60609\n\n\n3\n4\nWilliam D. Burns\n435 EAST 35TH STREET, 1ST FLOOR\n60616\n\n\n4\n5\nLeslie A. Hairston\n2325 EAST 71ST STREET\n60649\n\n\n\n\n\n\n\n\ncensus_altered = census.copy()\ncensus_altered.loc[0, 'ward'] = None\ncensus_altered.head()\n\n\n\n\n\n\n\n\nward\npop_2000\npop_2010\nchange\naddress\nzip\n\n\n\n\n0\nNone\n52951\n56149\n6%\n2765 WEST SAINT MARY STREET\n60647\n\n\n1\n2\n54361\n55805\n3%\nWM WASTE MANAGEMENT 1500\n60622\n\n\n2\n3\n40385\n53039\n31%\n17 EAST 38TH STREET\n60653\n\n\n3\n4\n51953\n54589\n5%\n31ST ST HARBOR BUILDING LAKEFRONT TRAIL\n60653\n\n\n4\n5\n55302\n51455\n-7%\nJACKSON PARK LAGOON SOUTH CORNELL DRIVE\n60637\n\n\n\n\n\n\n\n\nInstrucciones:\n\nFusiona wards y census en la columna ward y guarda el resultado en ward_census.\n\n\n# Merge the wards and census tables on the ward column\nward_census = wards.merge(census, on='ward')\n\n# Print the shape of wards_census\nprint(f'ward_census table shape: {ward_census.shape}')\n\nward_census table shape: (50, 9)\n\n\n\nFusiona las tablas merge_altered y census en la columna ward y observa la diferencia en las filas devueltas.\n\n\n# Print the first few rows of the wards_altered table to view the change\nprint(wards_altered[['ward']].head())\n\n# Merge the wards_altered and census tables on the ward column\nwards_altered_census =  wards_altered.merge(census, on='ward')\n\n# Print the shape of wards_altered_census\nprint(f'wards_altered_census table shape: {wards_altered_census.shape}')\n\n  ward\n0   61\n1    2\n2    3\n3    4\n4    5\nwards_altered_census table shape: (49, 9)\n\n\n\nFusiona las tablas wards y census_altered en la columna ward y observa la diferencia en las filas devueltas.\n\n\n# Print the first few rows of the wards_altered table to view the change\nprint(census_altered[['ward']].head())\n\n# Merge the wards_altered and census tables on the ward column\nwards_altered_census =  wards.merge(census_altered, on='ward')\n\n# Print the shape of wards_altered_census\nprint(f'wards_altered_census table shape: {wards_altered_census.shape}')\n\n   ward\n0  None\n1     2\n2     3\n3     4\n4     5\nwards_altered_census table shape: (49, 9)\n\n\nEn el paso 1, el .merge() devolvió una tabla con el mismo número de filas que la tabla original wards. Sin embargo, en los pasos 2 y 3, al usar las tablas alteradas con la primera fila alterada de la columna ward, el número de filas devueltas fue menor. No había un valor coincidente en la columna ward de la otra tabla. Recuerda que .merge() solo devuelve filas donde los valores coinciden en ambas tablas.",
    "crumbs": [
      "Capítulos",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Conceptos Básicos de la fusión de datos</span>"
    ]
  },
  {
    "objectID": "01_Conceptos_basicos_de_la_fusion_de_datos.html#relaciones-de-uno-a-muchos",
    "href": "01_Conceptos_basicos_de_la_fusion_de_datos.html#relaciones-de-uno-a-muchos",
    "title": "Conceptos Básicos de la fusión de datos",
    "section": "Relaciones de uno a muchos",
    "text": "Relaciones de uno a muchos\nEn una relación de uno a muchos cada fila de la tabla izquierda esta relacionada con una o varias filas de la tabla derecha.\nA continuación se muestran algunos ejemplos de relación uno a uno y relación uno a muchos:\n\n\n\n\n\n\n\nUno a uno\nUno a muchos\n\n\n\n\nLa relación entre products y inventory\nLa relación entre products y orders\n\n\nLa relación entre customery cust_tax_info\nLa relación entre customersy orders\n\n\n\n\nFusión de uno a muchos\nUna empresa puede tener uno o varios propietarios. En este ejercicio, seguirás adquiriendo experiencia con las uniones de uno a muchos fusionando una tabla de propietarios de empresas, llamada biz_owners, con la tabla licenses. Recuerda de la lección de video que, con una relación de uno a muchos, una fila de la tabla izquierda puede repetirse si está relacionada con varias filas de la tabla de la derecha. En esta lección, profundizarás en este tema averiguando cuál es el título de propietario de empresa más habitual (por ejemplo, secretario, CEO, o vicepresidente).\n\nlicenses = pd.read_pickle('./data/licenses.p')\nlicenses.head()\n\n\n\n\n\n\n\n\naccount\nward\naid\nbusiness\naddress\nzip\n\n\n\n\n0\n307071\n3\n743\nREGGIE'S BAR & GRILL\n2105 S STATE ST\n60616\n\n\n1\n10\n10\n829\nHONEYBEERS\n13200 S HOUSTON AVE\n60633\n\n\n2\n10002\n14\n775\nCELINA DELI\n5089 S ARCHER AVE\n60632\n\n\n3\n10005\n12\nNaN\nKRAFT FOODS NORTH AMERICA\n2005 W 43RD ST\n60609\n\n\n4\n10044\n44\n638\nNEYBOUR'S TAVERN & GRILLE\n3651 N SOUTHPORT AVE\n60613\n\n\n\n\n\n\n\n\nbiz_owners = pd.read_pickle('./data/business_owners.p')\nbiz_owners.head()\n\n\n\n\n\n\n\n\naccount\nfirst_name\nlast_name\ntitle\n\n\n\n\n0\n10\nPEARL\nSHERMAN\nPRESIDENT\n\n\n1\n10\nPEARL\nSHERMAN\nSECRETARY\n\n\n2\n10002\nWALTER\nMROZEK\nPARTNER\n\n\n3\n10002\nCELINA\nBYRDAK\nPARTNER\n\n\n4\n10005\nIRENE\nROSENFELD\nPRESIDENT\n\n\n\n\n\n\n\n\nInstrucciones:",
    "crumbs": [
      "Capítulos",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Conceptos Básicos de la fusión de datos</span>"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Unir datos con Pandas",
    "section": "",
    "text": "Bienvenida\n📊 Nivel: Intermedio\n🕒 Duración estimada: 4 horas\n🎥 Incluye código, visualizaciones y ejercicios",
    "crumbs": [
      "Bienvenida"
    ]
  },
  {
    "objectID": "index.html#contenido-del-curso",
    "href": "index.html#contenido-del-curso",
    "title": "Unir datos con Pandas",
    "section": "Contenido del curso:",
    "text": "Contenido del curso:\n\nConceptos básicos de la fusión de datos",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bienvenida</span>"
    ]
  },
  {
    "objectID": "index.html#módulos-del-curso",
    "href": "index.html#módulos-del-curso",
    "title": "Unir datos con Pandas",
    "section": "Módulos del curso",
    "text": "Módulos del curso\n\nConceptos básicos de la fusión de datos\nFusionar tablas con distintos tipos de unión\nFusión y concatenación avanzadas\nFusionar datos ordenados y series temporales",
    "crumbs": [
      "Bienvenida"
    ]
  },
  {
    "objectID": "index.html#datasets",
    "href": "index.html#datasets",
    "title": "Unir datos con Pandas",
    "section": "Datasets",
    "text": "Datasets\nEste curso utiliza los siguientes archivos:",
    "crumbs": [
      "Bienvenida"
    ]
  }
]