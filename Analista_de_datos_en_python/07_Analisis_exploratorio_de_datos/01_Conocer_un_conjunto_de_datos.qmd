---
title: "1 Conocer un conjunto de datos"
# author: "Edwin John Fredy Reyes Aguirre"
# date: today
# toc: true
# toc-title: "Contenido"
---

¿Cuál el la mejor manera de abordar un nuevo conjunto de datos? Aprende a validar y resumir datos categóricos y numéricos y a crear visualizaciones Seaborn para comunicar tus conclusiones.

## Exploración inicial

-   Análisis Exploratorio de Datos
    -   Es el proceso de limpiar y revisar datos para:
        -   Obterner información (Estadística descriptiva, correlaciones)
        -   Genrar hipótesis
-   Una primera mirada con .head()

```{python}
#| echo: true
#| eval: false
books = pd.read_csv('books.csv')
books.head()
```

![](images/paste-3.png)

-   Reuniendo más .info()

```{python}
#| echo: true
#| eval: false
books.info()
```

![](images/paste-2.png)

-   Una mirada cercana a las columnas categóricas

```{python}
#| echo: true
#| eval: false
books.value_counts('genre')
```

![](images/paste-4.png)

-   Columnas numéricas con .describe()

```{python}
#| echo: true
#| eval: false  
books.describe()
```

![](images/paste-5.png)

-   Visualizando datos numéricos

```{python}
#| echo: true
#| eval: false
import seaborn as sns
import matplotlib.pyplot as plt
sns.histplot(data=books, x='rating')
plt.show()
```

![](images/paste-6.png){width="370"}

-   Ajustando la anchura del bin

```{python}
#| echo: true
#| eval: false
sns.histplot(data=books, x='rating', binwidth=.1)
plt.show()
```

![](images/paste-7.png){width="370"}

### Funciones para la exploración inicial

Estás investigando las tasas de desempleo en todo el mundo y te han dado un nuevo conjunto de datos con el que trabajar. Los datos se han guardado y cargado para ti como un DataFrame de pandas llamado `unemployment`. Nunca antes habías visto los datos, así que tu primera tarea es utilizar unas cuantas funciones de pandas para conocer estos nuevos datos.

```{python}
import pandas as pd

ruta = './data/clean_unemployment.csv'
unemployment = pd.read_csv(ruta)
```

#### Instrucciones

1.  Utiliza una función de pandas para imprimir las cinco primeras filas del DataFrame `unemployment`.

```{python}
# Print the first five rows of unemployment
print(unemployment.head())
```

2.  Utiliza una función pandas para imprimir un resumen de los valores y tipos de datos de las columnas que no faltan del DataFrame `unemployment`.

```{python}
# Print a summary of non-missing values and data types in the unemployment DataFrame]
print(unemployment.info())
```

3.  Imprime las estadísticas de resument (recuento, media, desviación estándar, valores mínimo, máximo y cuartil) de cada columna numérica en `unemployment`.

```{python}
# Print summary statistics for numerical columns in unemployment
print(unemployment.describe())
```

Ahora haz aprendido que `unemployment` contiene 182 filas de datos de países, incluyendo `country_code`, `country_name`, `continent` y porcentajes de desempleo desde 2010 hasta 2021. ¡Si miraste muy de cerca, podrías haber notado que a algunos países les falta información en la columna `continent`! Continuemos explorando estos datos en el próximo ejercicio.

### Contar valores categóricos

Recordemos del ejercicio anterior que el DataFrame `unemployment` contiene 182 filas de datos de países que incluyen `country_code`, `country_name`, `continent` y porcentajes de desempleo de 2010 a 2021.

Ahora vas a explorar los datos categóricos contenidos en `unemployment` para comprender los datos que contiene relacionados con cada continente.

#### Instrucciones

-   Utiliza un método para contar los valores asociados a cada `continent` en el DataFrame `unemployment`.

```{python}
# Count the values associated with each continent in unemployment
print(unemployment['continent'].value_counts())
```

¿Sabías que hay 23 países en América del Norte, que incluye países en el Caribe y América Central? Puede que hayas notado que América del Norte tiene 18 puntos de datos en el DataFrame `unemployment`, por lo que nos falta información de algunos de los países en nuestro conjunto de datos.

### Desempleo mundial en 2021

¡Es hora de explorar algunos de los datos numéricos en `unemployment`! ¿Cuál fue el desempleo típico en un año determinado? ¿Cuál era la tasa de desempleo mínima y máxima, y cómo era la distribución de las tasas de desempleo en el mundo? Un histogrpama es una buena forma de hacerse una idea de las respuestas a estas preguntas.

Tu tarea en este ejercicio es crear un histograma que muestre la distribución de las tasas de paro mundiales en 2021.

#### Instrucciones

-   Importa las bibliotecas de visualización necesarias
-   Crea un histograma de la distribución de los porcentajes de desempleo de 2021 en todos los países en `unemployment`; muestra un punto pocentual completo en cada casilla.

```{python}
# Import the required visualization libraries
import seaborn as sns
import matplotlib.pyplot as plt

# Create a histogram of 2021 unemployment; show a full percent in each bin
sns.histplot(x='2021', data=unemployment, binwidth=1)
plt.show()
```

Parece que el desempleo en el 2021 se mantuvo alrededor del 3% al 8% para la mayoría de los países en el conjunto de datos, pero algunos países experimentaron un desempleo muy alto del 20% al 35%.

## Validación de datos

-   Validando los tipos de datos

```{python}
#| echo: true
#| eval: false
books.dtypes
```

![](images/paste-8.png){width="370"}

-   Actualizando los tipos de datos

```{python}
#| echo: true
#| eval: false
books['year'] = books['year'].astype(int)
books.dtypes
```

![](images/paste-9.png)

| Tipo       | Nombre Python |
|------------|---------------|
| String     | `str`         |
| Integer    | `int`         |
| Float      | `float`       |
| Dictionary | `dict`        |
| List       | `list`        |
| Boolean    | `bool`        |

-   Validando datos categóricos

```{python}
#| echo: true
#| eval: false
books['genre'].isin(['Fiction', 'Non Fiction'])
```

![](images/paste-10.png){width="370"}

Para validar los datos que no están en la lista

```{python}
#| echo: true
#| eval: false
~books['genre'].isin(['Fiction', 'Non Fiction'])
```

![](images/paste-11.png){width="370"}

Para filtrar el DataFrame por los valores en nuestra lista

```{python}
#| echo: true
#| eval: false
books[books['genre'].isin(['Fiction', 'Non Fiction'])].head()
```

![](images/paste-12.png)

-   Validando los datos numéricos

Para ver solo las columnas numéricas en un DataFrame:

```{python}
#| echo: true
#| eval: false
books.select_dtypes('number').head()
```

Para conocer un intervalo específico:

```{python}
#| echo: true
#| eval: false
books['year'].min()
```

![](images/paste-13.png){width="370"}

```{python}
#| echo: true
#| eval: false
books['year'].max()
```

![](images/paste-14.png){width="370" height="40"}

Se puede ver una imagen más detallada de la distribución de los datos, utilizando boxplot:

```{python}
#| echo: true
#| eval: false
sns.boxplot(data=books, x='year')
plt.show()
```

![](images/paste-15.png){width="370"}

También se puede ver los datos agrupados por una variable categórica.

```{python}
#| echo: true
#| eval: false
sns.boxplot(data=books, x='year', y='genre')
plt.show()
```

![](images/paste-16.png){width="370"}

### Detectar tipos de datos

¡Se ha modificado una columna en el DataFrame `unemployment` y ahora tiene un tipo de datos incorrecto! Este tipo de datos te impedirá realizar una exploración y un análisis eficaces, por lo que tu tarea consiste en identificar qué columna tiene un tipo de datos incorrecto y, a continuación, corregirlo.

```{python}
#| echo: false
#| eval: true
unemployment['2019'] = unemployment['2019'].astype('object')
```

#### Instrucciones

**Pregunta**

1.  ¿Cuál de las siguientes columnas requiere una actualización de su tipo de datos?

```{python}
print(unemployment.dtypes)
```

**Respuestas posibles**

-   [ ] `country_name`
-   [ ] `continent`
-   [x] `2019`
-   [ ] `2021`

2.  

-   Actualiza el tipo de datos de la columna `2019` de `unemployment` a `float`.
-   ¡Vuelve a imprimir el `dtypes` del DataFrame `umemployment` para comprobar que se ha actualizado el tipo de datos!

```{python}
# Update the data type of the 2019 column to a float
unemployment['2019'] = unemployment['2019'].astype('float')

# Print the dtypes to check your work
print(unemployment.dtypes)
```

Cambiar el tipo de dato de la columna `2019` significa que ahora puedes realizar cálculos sobre ella, incluyendo validar su rango.

### Validar continentes

Tu colega te ha informado de que los datos sobre el desempleo de los países de Oceanía no son fiables, y te gustaría identificar y excluir a estos países de tus datos de `unemployment`. ¡La función `.isin()` puede ayudarte con eso!

Tu tarea consiste en utilizar `isin()` para identificar los países que no están en Oceanía. Estos países deberían devolver `True` mientras que los países de Oceanía deberán devolver `False`. Esto te permitirá utilizar los resultados de `isin()` para filtrar rápidamente los países de Oceanía utilizando la indexación booleana.

### Instrucciones

1.  Defina una Serie Booleana que describan si cada `continent` está o no fuera de `Oceanía`; llama a esta Serie `not_oceania`.

```{python}
# Define a Series describing whether each continent is outside of Oceania
not_oceania = ~unemployment['continent'].isin(['Oceania'])
```

2.  Utiliza la indexación booleana para imprimir el DataFrame `unemployment` sin ninguno de los datos relacionados con los países de Oceanía.

```{python}
# Define a Series describing whether each continent is outside of Oceania
not_oceania = ~unemployment['continent'].isin(['Oceania'])

# Print unemployment without records related  to countries in Oceania
print(unemployment[not_oceania])
```

Validaste datos categóricos y usaste tu validación `.isin()` para excluir datos en los que no estabas interesado. Filtrar los datos que no necesitas al comienzo de tu proceso de EDA es una excelente manera de organizarte para la exploración que está por venir.

### Rango de validación

Ahora es el momento de validar nuestros datos numéricos. En la lección anterior vimos, utilizando `.describe()`, que la mayor tasa de desempleo durante 2021 fue de casi el 34 %, mientras que la más baja estuvo justo por encima de cero.

Tu tarea en este ejercicio es obtener información mucho más detallada sobre el rango de los datos de `unemployment` utilizando el diagrama de caja de Seaborn, y también visualizarás el rango de las tasas de desempleo en cada continente para comprender las diferencias de rango geográfico.

#### Instrucciones

-   Imprime las tasas de desempleo mínima y máximam en este orden, durante 2021.
-   Crea un diagrama de caja de las tasas de desempleo de 2021 (en el eje x), desglosadas por continente (en el eje y).

```{python}
# Print the minimum an maximum unemployment rates during 2021
print(unemployment['2021'].min(), unemployment['2021'].max())

# Create a boxplot of 2021 unemployment rates, broken down by continent
sns.boxplot(data=unemployment, x='2021', y='continent', 
            hue='continent', legend=False)
plt.show()
```

Observa cómo varían los rangos de desempleo entre continentes. Por ejemplo, el percentil 50 de África es más bajo que el de América del Norte, pero el rango es mucho más amplio.

## Resumen de datos

-   Explorando grupo de datos
    -   `.groupby()` grupo de datos por categoría.
    -   Función de agregación indica cómo se resume un grupo de datos.

```{python}
#| echo: true
#| eval: false
books.groupby('genre').mean()
```

![](images/paste-17.png)

-   Funciones de agregación

    -   Suma: `.sum()`

    -   Conteo: `.cont`

    -   Mínimo: `.min()`

    -   Máximo: `.max()`

    -   Varianza: `.var()`

    -   Desviación estándar: `.std()`

-   Agregación de datos no agrupados

    -   `.agg()` aplica funciones de agregación a través de un DataFrame

    -   Por defecto agrega todas las filas de una columna determinada

    -   Se suele utilizar cuando queremos más de una función

    -   Solo lo aplica a las columnas numéricas

```{python}
#| echo: true
#| eval: false
books.agg(['mean', 'std'])
```

![](images/paste-18.png)

-   Especificando agregaciones para columnas

```{python}
#| echo: true
#| eval: false
books.agg({'rating': ['mean', 'std'], 'year': ['median']})
```

![](images/paste-19.png)

-   Nombrando columnas resumen

```{python}
#| echo: true
#| eval: false
books.groupby('genre').agg(
    mean_rating = ('rating', 'mean'),
    std_rating = ('rating', 'std'),
    median_year = ('year', 'median')
)
```

![](images/paste-20.png)

-   Visualizando resúmenes categoricos

    -   Calculan automáticamente la media de una variable cuantitativa

```{python}
#| echo: true
#| eval: false
sns.barplot(data=books, x='genre', y='rating')
plt.show()
```

![](images/paste-21.png){width="370"}


### Resúmenes con .groupby() y .agg()

En este ejercicio, explorarás las medias y desviaciones estándar de los datos anuales de desempleo. En primer lugar, encontrarás las medias y desviaciones estándar independientemente del continente para observar las tendencias mundiales del desempleo. Después, comprobarás las tendencias del desempleo desglosadas por continente.

```{python}
import pandas as pd

ruta = './data/clean_unemployment.csv'
unemployment = pd.read_csv(ruta)
print(unemployment.head())
```

#### Instrucciones

1. Imprime la media y las desviación estándar d elas tasas de paro de cada año (en ese orden).

```{python}
# Print the mean and standard deviation of rates by year
print(unemployment[
    ['2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020']
].agg(['mean', 'std']))
```

2. Imprime la media y la desviación estándar (en ese orden) de las tasas de paro de cada año agrupadas por continente.

```{python}
# Print yearly mean and standard deviation grouped by continent
print(unemployment[
    ['continent', '2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020']
].groupby("continent").agg(['mean', 'std']))
```
Estos datos están bien resumidos, pero es un poco largo. ¿Qué pasaríasi quisieras enfocarte en un resumen de solo un año y hacerlo más legible? ¡Inténtalo en el siguiente ejercicio!


### Agregaciones con nombre

Ya has visto cómo `.groupby()` y `.agg()` pueden combinarse para mostrar resúmenes para categorías. A veces, es útil nombrar nuevas columnas al agregar, para que se quede claro en la salida del código qué agregaciones se están aplicando y dónde.

Tu tarea consiste en crear un DataFrame llamado `continent_summary` que muestre una fila por cada continente. Las columnas del DataFram,e contendrán la tasa de paro media de cada continente en 2021, así como la desviación estándar de la tasa de empleo del 2021. Y por supuesto, ¡renombrarás las columnas para que su contenido quede claro!

#### Instrucciones

- Crea una columna llamada `mean_rate_2021` que muestre la tasa de paro media de 2021 para cada continente.

- Crea una columna llamada `std_rate_2021` que muestre la desviación estándar de la tasa de paro de 2021 para cada continente. 

```{python}
continent_sumary = unemployment[
    ['continent', '2021']
].groupby('continent').agg(
    # Create the mean_rate_2021 column
    mean_rate_2021 = ('2021', 'mean'),
    # Create the std_rate_2021 column
    std_rate_2021 = ('2021', 'std'),
)
print(continent_sumary)
```

El desempleo promedio de 2021 varió ampliamente por continente, y también lo hizo el desempleo dentro de esos continentes.


### Visualizar resúmenes categóricos

Como has aprendido en este capítulo, Seaborn tiene muchas visualizaciones estupendas para la exploración, incluido un gráfico de barras para mostrar un valor medio agregado por categoría de datos.

En Seaborn, los gráficos de barras incluyen una barra vertical que indica el intervalo de confianza del 95 % para la media categórica. Como los intervalos de confianza se calculan utilizando tanto el número de valores como la variabilidad de esos valores, dan una indicación útil de hasta qué punto se puede confiar en los datos.

Tu tarea consiste en crear un diagrama de barras para visualizar las medias y los intervalos de confianza de las tasas de desempleo en los distintos continentes.


```{python}
import matplotlib.pyplot as plt
import seaborn as sns
```

#### Instrucciones

- Crea un diagrama de barras que muestre los continentes en el eje x y lsus respectivas tasas medias de desempleo en 2021 en el eje y.


```{python}
# Create a bar plot of continents and their average unemployment
sns.barplot(data=unemployment, x='continent', y='2021',
            hue='continent', legend=False)
plt.show()
```

Aunque Europa tiene un mayor desempleo promedio que Asia, también tiene un intervalo de confianza más pequeño para ese promedio, por lo que el valor promedio es más confiable.