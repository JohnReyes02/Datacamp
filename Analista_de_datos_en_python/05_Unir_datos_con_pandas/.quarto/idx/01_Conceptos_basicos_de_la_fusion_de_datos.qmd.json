{"title":"Conceptos Básicos de la fusión de datos","markdown":{"yaml":{"title":"Conceptos Básicos de la fusión de datos","author":"Edwin John Fredy Reyes Aguirre","date":"today","toc":true,"toc-title":"Contenido"},"headingText":"Unión interna","containsRefs":false,"markdown":"\n\nAprende a fusionar datos dispares mediante uniones internas. Combinando información de múltiples fuentes, descubrirás perspectivas convincentes que antes podían estar ocultas. También aprenderás cómo la relación entre esas fuentes, de uno a uno o de uno a muchos, puede afectar a tu resultado.\n\n\n### Qué columna elegiremos para fusionar?\n\nChicago proporciona una lista de propietarios de taxis y vehículos con licencia para operar en la ciudad, por seguridad pública. Tu objetivo es unir dos tablas. Una tabla se llama `taxi_owners` y contiene información sobre los propietarios de las empresas de taxis, mientras que la otra se llama `taxi_veh`e incluye información sobre cada vehículo de taxi.\n\n\n```{python}\n\nimport pandas as pd\n```\n\n\n```{python}\ntaxi_owners = pd.read_pickle('../datasets/taxi_owners.p')\ntaxi_owners.head()\n```\n\n\n```{python}\ntaxi_veh = pd.read_pickle('../datasets/taxi_vehicles.p')\ntaxi_veh.head()\n```\n\n#### Instrucciones:\n\nElige una columna que utilizarías para fusionar las dos tablas utilizando el método `.merge()`.\n\nRespuestas posibles\n\n- [ ] on='rid'\n\n- [x] on='vid'\n\n- [ ] on='year'\n\n- [ ] on='zip'\n\n\n### Tu primera unión interna\n\nTe han encargado que averigües cuáles son los tipos de combustibles más utlizados en los taxis de Chicago. Para completar el análisis, tienes que fusionar las tablas `taxi_owners` y `taxi_veh` en la columna `vid`. A continuación, puedes utilizar la tabla combinada junto con el método `.values_counts()` para encontrar el `fuel_type` más común.\n\n#### Instrucciones:\n\n1. Fusiona `taxi_owners` con `taxi_veh` en la columna `vid` y guarda el resultado en `taxi_own_veh`.\n\n\n```{python}\n\n# Merge the taxi_owners and taxi_veh tables\ntaxi_own_veh = taxi_owners.merge(taxi_veh, on='vid')\ntaxi_own_veh.head()\n\n# Print the column names of taxi_own_veh\nprint(taxi_own_veh.columns)\n```\n\n2. Establece los sufijos izquierdo y derecho de la tabla para las columnas solapadas de la fusión en `_own` y `_veh`, respectivamente.\n\n```{python}\n\n# Merge the taxi_owners and taxi_veh tables setting a suffix\ntaxi_own_veh = taxi_owners.merge(taxi_veh, on='vid', suffixes=('_own', '_veh'))\ntaxi_own_veh.head()\n\n# Print the column names of taxi_own_veh\nprint(taxi_own_veh.columns)\n```\n\n3. Selecciona la columna `fuel_type` de `taxi_own_veh` e imprime `value_counts()` para encontrar los `fuel_type` más utilizados.\n\n```{python}\n\n# Merge the taxi_owners and taxi_veh tables setting a suffix\ntaxi_own_veh = taxi_owners.merge(taxi_veh, on='vid', suffixes=('_own', '_veh'))\n\n# Print the value_counts to find the most popular fuel_type\nprint(taxi_own_veh['fuel_type'].value_counts())\n```\n\n\n### Uniones internas y número de filas devueltas\n\nTodas las fusiones que has estudiado hasta ahora se llaman uniones internas. Es necesario comprender que las uniones internas solo devuelven las filas con valores coincidentes en ambas tablas. Explorarás esto más a fondo revisando la fusión entre las tablas `wards` y `census`, y comparándola después con fusiones de copias de estas tablas ligeramente alteradas, denominadas `wards_altered` y `census_altered`. La primera fila de la columna `wards` se ha modificado en las tablas alteradas. Examinarás cómo afecta esto a la fusión entre ellos.\n\n```{python}\n\nwards = pd.read_pickle('../datasets/ward.p')\nwards.head()\n```\n\n```{python}\ncensus = pd.read_pickle('../datasets/census.p')\ncensus.head()\n```\n\n```{python}\n\nwards_altered = wards.copy()\nwards_altered.loc[0, 'ward'] = 61\nwards_altered.head()\n```\n\n```{python}\ncensus_altered = census.copy()\ncensus_altered.loc[0, 'ward'] = None\ncensus_altered.head()\n```\n\n#### Instrucciones:\n\n1. Fusiona `wards` y `census` en la columna `ward` y guarda el resultado en `ward_census`.\n\n```{python}\n\n# Merge the wards and census tables on the ward column\nward_census = wards.merge(census, on='ward')\n\n# Print the shape of wards_census\nprint(f'ward_census table shape: {ward_census.shape}')\n```\n\n2. Fusiona las tablas `merge_altered` y `census` en la columna `ward` y observa la diferencia en las filas devueltas.\n\n```{python}\n\n# Print the first few rows of the wards_altered table to view the change\nprint(wards_altered[['ward']].head())\n\n# Merge the wards_altered and census tables on the ward column\nwards_altered_census =  wards_altered.merge(census, on='ward')\n\n# Print the shape of wards_altered_census\nprint(f'wards_altered_census table shape: {wards_altered_census.shape}')\n```\n\n3. Fusiona las tablas `wards` y `census_altered` en la columna `ward` y observa la diferencia en las filas devueltas.\n\n```{python}\n\n# Print the first few rows of the wards_altered table to view the change\nprint(census_altered[['ward']].head())\n\n# Merge the wards_altered and census tables on the ward column\nwards_altered_census =  wards.merge(census_altered, on='ward')\n\n# Print the shape of wards_altered_census\nprint(f'wards_altered_census table shape: {wards_altered_census.shape}')\n```\n\nEn el paso 1, el `.merge()` devolvió una tabla con el mismo número de filas que la tabla original `wards`. Sin embargo, en los pasos 2 y 3, al usar las tablas alteradas con la primera fila alterada de la columna `ward`, el número de filas devueltas fue menor. No había un valor coincidente en la columna `ward` de la otra tabla. _Recuerda que `.merge()` solo devuelve filas donde los valores coinciden en ambas tablas._\n\n\n## Relaciones de uno a muchos","srcMarkdownNoYaml":"\n\nAprende a fusionar datos dispares mediante uniones internas. Combinando información de múltiples fuentes, descubrirás perspectivas convincentes que antes podían estar ocultas. También aprenderás cómo la relación entre esas fuentes, de uno a uno o de uno a muchos, puede afectar a tu resultado.\n\n## Unión interna\n\n### Qué columna elegiremos para fusionar?\n\nChicago proporciona una lista de propietarios de taxis y vehículos con licencia para operar en la ciudad, por seguridad pública. Tu objetivo es unir dos tablas. Una tabla se llama `taxi_owners` y contiene información sobre los propietarios de las empresas de taxis, mientras que la otra se llama `taxi_veh`e incluye información sobre cada vehículo de taxi.\n\n\n```{python}\n\nimport pandas as pd\n```\n\n\n```{python}\ntaxi_owners = pd.read_pickle('../datasets/taxi_owners.p')\ntaxi_owners.head()\n```\n\n\n```{python}\ntaxi_veh = pd.read_pickle('../datasets/taxi_vehicles.p')\ntaxi_veh.head()\n```\n\n#### Instrucciones:\n\nElige una columna que utilizarías para fusionar las dos tablas utilizando el método `.merge()`.\n\nRespuestas posibles\n\n- [ ] on='rid'\n\n- [x] on='vid'\n\n- [ ] on='year'\n\n- [ ] on='zip'\n\n\n### Tu primera unión interna\n\nTe han encargado que averigües cuáles son los tipos de combustibles más utlizados en los taxis de Chicago. Para completar el análisis, tienes que fusionar las tablas `taxi_owners` y `taxi_veh` en la columna `vid`. A continuación, puedes utilizar la tabla combinada junto con el método `.values_counts()` para encontrar el `fuel_type` más común.\n\n#### Instrucciones:\n\n1. Fusiona `taxi_owners` con `taxi_veh` en la columna `vid` y guarda el resultado en `taxi_own_veh`.\n\n\n```{python}\n\n# Merge the taxi_owners and taxi_veh tables\ntaxi_own_veh = taxi_owners.merge(taxi_veh, on='vid')\ntaxi_own_veh.head()\n\n# Print the column names of taxi_own_veh\nprint(taxi_own_veh.columns)\n```\n\n2. Establece los sufijos izquierdo y derecho de la tabla para las columnas solapadas de la fusión en `_own` y `_veh`, respectivamente.\n\n```{python}\n\n# Merge the taxi_owners and taxi_veh tables setting a suffix\ntaxi_own_veh = taxi_owners.merge(taxi_veh, on='vid', suffixes=('_own', '_veh'))\ntaxi_own_veh.head()\n\n# Print the column names of taxi_own_veh\nprint(taxi_own_veh.columns)\n```\n\n3. Selecciona la columna `fuel_type` de `taxi_own_veh` e imprime `value_counts()` para encontrar los `fuel_type` más utilizados.\n\n```{python}\n\n# Merge the taxi_owners and taxi_veh tables setting a suffix\ntaxi_own_veh = taxi_owners.merge(taxi_veh, on='vid', suffixes=('_own', '_veh'))\n\n# Print the value_counts to find the most popular fuel_type\nprint(taxi_own_veh['fuel_type'].value_counts())\n```\n\n\n### Uniones internas y número de filas devueltas\n\nTodas las fusiones que has estudiado hasta ahora se llaman uniones internas. Es necesario comprender que las uniones internas solo devuelven las filas con valores coincidentes en ambas tablas. Explorarás esto más a fondo revisando la fusión entre las tablas `wards` y `census`, y comparándola después con fusiones de copias de estas tablas ligeramente alteradas, denominadas `wards_altered` y `census_altered`. La primera fila de la columna `wards` se ha modificado en las tablas alteradas. Examinarás cómo afecta esto a la fusión entre ellos.\n\n```{python}\n\nwards = pd.read_pickle('../datasets/ward.p')\nwards.head()\n```\n\n```{python}\ncensus = pd.read_pickle('../datasets/census.p')\ncensus.head()\n```\n\n```{python}\n\nwards_altered = wards.copy()\nwards_altered.loc[0, 'ward'] = 61\nwards_altered.head()\n```\n\n```{python}\ncensus_altered = census.copy()\ncensus_altered.loc[0, 'ward'] = None\ncensus_altered.head()\n```\n\n#### Instrucciones:\n\n1. Fusiona `wards` y `census` en la columna `ward` y guarda el resultado en `ward_census`.\n\n```{python}\n\n# Merge the wards and census tables on the ward column\nward_census = wards.merge(census, on='ward')\n\n# Print the shape of wards_census\nprint(f'ward_census table shape: {ward_census.shape}')\n```\n\n2. Fusiona las tablas `merge_altered` y `census` en la columna `ward` y observa la diferencia en las filas devueltas.\n\n```{python}\n\n# Print the first few rows of the wards_altered table to view the change\nprint(wards_altered[['ward']].head())\n\n# Merge the wards_altered and census tables on the ward column\nwards_altered_census =  wards_altered.merge(census, on='ward')\n\n# Print the shape of wards_altered_census\nprint(f'wards_altered_census table shape: {wards_altered_census.shape}')\n```\n\n3. Fusiona las tablas `wards` y `census_altered` en la columna `ward` y observa la diferencia en las filas devueltas.\n\n```{python}\n\n# Print the first few rows of the wards_altered table to view the change\nprint(census_altered[['ward']].head())\n\n# Merge the wards_altered and census tables on the ward column\nwards_altered_census =  wards.merge(census_altered, on='ward')\n\n# Print the shape of wards_altered_census\nprint(f'wards_altered_census table shape: {wards_altered_census.shape}')\n```\n\nEn el paso 1, el `.merge()` devolvió una tabla con el mismo número de filas que la tabla original `wards`. Sin embargo, en los pasos 2 y 3, al usar las tablas alteradas con la primera fila alterada de la columna `ward`, el número de filas devueltas fue menor. No había un valor coincidente en la columna `ward` de la otra tabla. _Recuerda que `.merge()` solo devuelve filas donde los valores coinciden en ambas tablas._\n\n\n## Relaciones de uno a muchos"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"01_Conceptos_basicos_de_la_fusion_de_datos.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","title":"Conceptos Básicos de la fusión de datos","author":"Edwin John Fredy Reyes Aguirre","date":"today","toc-title":"Contenido"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":[]}