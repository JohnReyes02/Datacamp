---
title: "Visualizar dos variables cuantitativas"
author: "Edwin John Fredy Reyes Aguirre"
date: today
toc: true
toc-title: "Contenido"
---

En este capíulo, crearás y personalizarás gráficos que visualizan la relación entre dos variables cuantitativas. Para ello, utilizarás gráficos se dispersión y de líneas para explorar cómo cambia el nivel de contaminación atmosférica en una ciudad a lo largo de un día y cómo se relacionan los caballos de potencia con la eficiencia del combustible en los coches. También verás otra gran ventaja de utilizar Seaborn: ¡la posibilidad de crear fácilmente subtramas en una sola figura!

## Intruducción a las plots (tramas) y subplots (subtramas) relacionales

-   Gráficos relacionales

    -   Altura vs Peso
    -   Número de ausencias de un alumno vs Nota final
    -   GDP vs Personas que saben leer y escribir

-   Intruducción a relplot()

    -   Crea gráficos relacionales: scatterplots o line plots

    -   ¿Por qué usar `relplot()` en lugar de `scatterplot()`?

        -   `relplot()` permite crear subgráficos en una sola figura.

-   Scatterplot() vs relplot()

    ```{python}
    # para poder mostrar el dataset en los ejemplos
    import pandas as pd
    tips = pd.read_csv('./data/tips.csv')
    ```

    - Usando `scatterplot()`
    ```{python}
    import seaborn as sns
    import matplotlib.pyplot as plt

    sns.scatterplot(x='total_bill',
                    y='tip',
                    data=tips)
    plt.show()

    ```
    - Usando `relplot()`

    ```{python}
    import seaborn as sns
    import matplotlib.pyplot as plt

    sns.relplot(x='total_bill',
                y='tip',
                data=tips,
                kind='scatter')
    plt.show()
    ```

- Subplots en columnas

```{python}
import seaborn as sns
import matplotlib.pyplot as plt

sns.relplot(x='total_bill',
            y='tip',
            data=tips,
            kind='scatter',
            col='smoker')
plt.show()
```

- Subplots en filas


```{python}
import seaborn as sns
import matplotlib.pyplot as plt

sns.relplot(x='total_bill',
            y='tip',
            data=tips,
            kind='scatter',
            row='smoker')
plt.show()
```

- Subplots en filas y columnas


```{python}
import seaborn as sns
import matplotlib.pyplot as plt

sns.relplot(x='total_bill',
            y='tip',
            data=tips,
            kind='scatter',
            col='smoker',
            row='time')
plt.show()
```

- Subgrupos por día de la semana 


```{python}
import seaborn as sns
import matplotlib.pyplot as plt

sns.relplot(x='total_bill',
            y='tip',
            data=tips,
            kind='scatter',
            col='day')
plt.show()
```

El gráfico se ve pequeño si todos estan en la misma fila

- Wrapping columns
    - Se pueden establecer dos gráficos por fila

```{python}
import seaborn as sns
import matplotlib.pyplot as plt

sns.relplot(x='total_bill',
            y='tip',
            data=tips,
            kind='scatter',
            col='day',
            col_wrap=2)
plt.show()
```

- Orden de las columnas

```{python}
import seaborn as sns
import matplotlib.pyplot as plt

sns.relplot(x='total_bill',
            y='tip',
            data=tips,
            kind='scatter',
            col='day',
            col_wrap=2,
            col_order=['Thur',
                       'Fri',
                       'Sat',
                       'Sun'])
plt.show()
```

### Crear subtramas con columna y fila

Hemos visto en ejercicios anteriores que los alumnos con más faltas (`"absences"`) tienden a tener notas finales más bajas (`"G3"`). ¿Se mantiene esta relación independientemente de cuánto tiempo estudien los alumnos cada semana?

Para responder a esto, observaremos la relación entre el número de faltas de asistencia a clase de un alumno y su calificación final en el curso, creando subtramas separadas en función del tiempo de estudio semanal de cada alumnos (`"study_time"`).

```{python}
import pandas as pd
student_data = pd.read_csv('./data/student-alcohol-consumption.csv', index_col=0)
student_data.head()
```

#### Instrucciones

1. Modifica el código paora utilizar `relplot()` en lugar de `scatterplot()`.

```{python}
# Change to use relplot() instead of scatterplot()
sns.relplot(x='absences', y='G3',
            data=student_data,
            kind='scatter')

# Show plot
plt.show()
```

2. Modifica el código para crear un gráfico de dispersión para cada nivel de la variable `"study_time"`, ordenado en columnas.

```{python}
# Change to make subplots based on study time
sns.relplot(x='absences', y='G3',
            data=student_data,
            kind='scatter',
            col='study_time')
# Show plot
plt.show()
```
3. Adapta tu código para crear un gráfico de dispersión para cada nivel del tiempo de estudio semanal de un alumno, esta vez ordenado en filas.

```{python}
# Change this scatter plot to arrange the plots in rows instead of columns
sns.relplot(x='absences', y='G3',
            data=student_data,
            kind='scatter',
            row='study_time')
# Show plot
plt.show()
```

Debido a que estos subgráficos tenían un gran rango de valores x, es más fácil leerlos dispuestos en filas en lugar de columnas.


### Crear subtramas de dos factores

Sigamos examinando el conjunto de datos `student_data` de alumnos de secundaria. Aquí queremos responder a la siguiente pregunta: ¿la nota del primer semestre de un alumno (`"G1"`) tienede a correlacionarse con su nota final (`"G3"`)?

Hay muchos aspectos de la vida de un alumno que pueden dar lugar a una nota final más alta o más baja en la clase. Por ejemplo, algunos alumnos reciben apoyo  educativo adicional de su centro escolar (`"schoolsup"`) o de su familia (`"famsup"`), lo que podría traducirse en mejores notas.
Intentamos controlar estos dos factores creando subtramas en función de si el alumno recibió apoyo educativo adicional de su escuela o de su familia.

#### Instrucciones

1. Utiliza `relplot()` para crear un gráfico de dispersión con `"G1"` en el eje x y `"G3"` en el eje y, utilizando el DataFrame `student_data`

```{python}
# Create a scatter plot fo G1 vs. G3
sns.relplot(x='G1', y='G3',
            data=student_data,
            kind='scatter',
            )
# Show plot
plt.show()
```

2. Crea subtramas **de columnas** en función de su el alumno recibió ayuda de la escuela (`"schoolsup"`), ordenadas de forma que "si" vaya antes que "no".

```{python}
# Adjust to add subplots based on school support
sns.relplot(x='G1', y='G3',
            data=student_data,
            kind='scatter',
            col='schoolsup',
            col_order=['yes', 'no']
            )
# Show plot
plt.show()
```

3. Añade subgrupos **de filas** en función de su el alumno recibió ayuda de la familia (`"famsup"`), ordenados de forma que "si" vaya antes que "no". Esto dará lugar a subtramas basadas en dos factores.


```{python}
# Adjust further to add subplots based on family support
sns.relplot(x='G1', y='G3',
            data=student_data,
            kind='scatter',
            col='schoolsup',
            col_order=['yes', 'no'],
            row='famsup',
            row_order=['yes', 'no'])
# Show plot
plt.show()
```

Parece que la nota del primer semestre si correlaciona con la nota final, independientemente dl tipo de apoyo que recibió el estudiante.