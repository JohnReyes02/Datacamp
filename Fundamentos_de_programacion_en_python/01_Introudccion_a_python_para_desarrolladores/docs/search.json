[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Introducci√≥n a Python para desarrolladores",
    "section": "",
    "text": "Bienvenida\nüìä Nivel: Principiante\nüïí Duraci√≥n estimada: 3 horas\nüé• Incluye c√≥digo, visualizaciones y ejercicios",
    "crumbs": [
      "Bienvenida"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "Introduction",
    "section": "",
    "text": "This is a book created from markdown and executable code.\nSee Knuth (1984) for additional discussion of literate programming.\n\n\n\n\nKnuth, Donald E. 1984. ‚ÄúLiterate Programming.‚Äù Comput. J. 27 (2): 97‚Äì111. https://doi.org/10.1093/comjnl/27.2.97.",
    "crumbs": [
      "Capitulos",
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.",
    "crumbs": [
      "Capitulos",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Summary</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. ‚ÄúLiterate Programming.‚Äù Comput.\nJ. 27 (2): 97‚Äì111. https://doi.org/10.1093/comjnl/27.2.97.",
    "crumbs": [
      "Capitulos",
      "References"
    ]
  },
  {
    "objectID": "index.html#descripci√≥n",
    "href": "index.html#descripci√≥n",
    "title": "Introducci√≥n a Python para desarrolladores",
    "section": "Descripci√≥n",
    "text": "Descripci√≥n\n¬øTienes ganas de sumergirte en el mundo de la programaci√≥n pero no sabes por d√≥nde empezar? Este curso es para ti, dise√±ado espec√≠ficamente para principiantes sin experiencia previa en programaci√≥n. Python, es un lenguaje vers√°til y potente, ¬°perfecto para el desarrollo de software!\nEste curso te introduce en conceptos clave, desde la creaci√≥n de comentarios de c√≥digo y la realizaci√≥n de c√°lculos hasta el descubrimiento de los tipos de datos incorporados de Python, ¬°incluidos los flotantes, las cadenas, los enteros y los valores booleanos! Aprender√°s a almacenar informaci√≥n en variables utilizando diversas estructuras de datos, como listas, diccionarios, conjuntos y tuplas.\nProgresar√°s en los operadores de comparaci√≥n, utiliz√°ndolos para desarrollar un flujo de trabajo personalizado que ejecute condicionalmente c√≥digo en funci√≥n de si se cumplen las condiciones. El curso termina introduciendo los bucles for y while, que son esenciales para iterar sobre los datos y ejecutar tareas.",
    "crumbs": [
      "Bienvenida"
    ]
  },
  {
    "objectID": "index.html#m√≥dulos-del-curso",
    "href": "index.html#m√≥dulos-del-curso",
    "title": "Introducci√≥n a Python para desarrolladores",
    "section": "M√≥dulos del curso",
    "text": "M√≥dulos del curso\n\nInrtroducci√≥n a Python\n\nTrabajar con tipo de datos\nFlujo de control y bucles",
    "crumbs": [
      "Bienvenida"
    ]
  },
  {
    "objectID": "01_Introduccion_a_python.html",
    "href": "01_Introduccion_a_python.html",
    "title": "Introducci√≥n a Python",
    "section": "",
    "text": "¬øQu√© es Python?\nDescubre las maravillas de Python: por qu√© es popular y c√≥mo utilizarlo. ¬°No se requieren conocimientos previos!",
    "crumbs": [
      "Capitulos",
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Introducci√≥n a Python</span>"
    ]
  },
  {
    "objectID": "03_Flujo_de_control_y_bucles.html",
    "href": "03_Flujo_de_control_y_bucles.html",
    "title": "Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.",
    "crumbs": [
      "Capitulos",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Summary</span>"
    ]
  },
  {
    "objectID": "01_Introduccion_a_python.html#qu√©-es-python",
    "href": "01_Introduccion_a_python.html#qu√©-es-python",
    "title": "Introducci√≥n a Python",
    "section": "",
    "text": "Python es un lenguaje de programaci√≥n de prop√≥sito general utilizado para crear casi cualquier sofware.\nLa sintaxis de alto nivel de Python se parece al lenguaje natural.\nPython tiene paquetes de software disponibles p√∫blicamente, que son c√≥digos escritos por otros desarrolladores que podemos utilizar en lugar de escribir una funci√≥n desde cero.\nEs gratuito y de c√≥digo abierto, lo que significa que cualquiera puede usarlo, modificarlo y distribuirlo como crea conveniente.\nLos usos m√°s comunes de Python incluyen:\n\nAutomatizaci√≥n\nDesarrollo Web\nTareas de IA\nInformes\nWeb Scraping\nReconocimiento de Imagen\n\n\n\nEjecutar tu primer script de python\nEn este ejercicio ejecutar√°s tu primer c√≥digo en Python.\n\nInstrucciones\n\nPulsa el bot√≥n Ejecutar c√≥digo para ejecutar el script de Python y ver los resultados en el √°rea del shell de Python.\nPulsa el bot√≥n Enviar respuesta para pasar al siguiente ejecticio.\n\n\nprint('I Love Python')\n\nI Love Python\n\n\nAcabas de ejecutar tu primer c√≥digo en Python. Esto es solo el comienzo; pronto estar√°s escribiendo programas en Python m√°s complejos y potentes.\n\n\n\nEscribir tu primer script en Python\nAhora, escribir√°s tu primer l√≠nea de c√≥digo Python.\nLa funci√≥n print() de Python muestra mensajes y resultados de c√≥digo en el int√©rprete de comandos.\n\nInstrucciones\n\nUtiliza la funci√≥n incorporada de Python print() para mostrar \"Learning Python\".\n\n\n# Replace ____ below to display \"Learning Python\"\nprint('Learning Python')\n\nLearning Python\n\n\nHaz impreso corectamente ‚ÄòLearning Python‚Äô, usando la funci√≥n print() dentre del shell de Python. La funci√≥n print() asegura que siempre mostrar√°s mensajes en el shell de Python.",
    "crumbs": [
      "Capitulos",
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Introducci√≥n a Python</span>"
    ]
  },
  {
    "objectID": "01_Introduccion_a_python.html#sint√°sis-de-python",
    "href": "01_Introduccion_a_python.html#sint√°sis-de-python",
    "title": "Introducci√≥n a Python",
    "section": "Sint√°sis de Python",
    "text": "Sint√°sis de Python\n\nPrincipales operadores\n\nSuma: +\nResta: -\nMultiplicaci√≥n *\nDivisi√≥n: /\nM√≥dulo: %\n\nLos comentarios en el c√≥digo se escriben iniciando con un #\n\n\nPython como calculadora\nTrabajar con n√∫meros y realizar c√°lculos son tareas de programaci√≥n muy comunes. En este ejercicio, debes realizar dos c√°lculos.\n\nInstrucciones\n\nImprime la suma de 19 + 17.\nImprime el resultado de restar 12 a 99.\n\n\n# Add 19 and 17\nprint(19 + 17)\n\n# Subtract 12 from 99\nprint(99 - 12)\n\n36\n87\n\n\nPython puede ayudarte a hacer sumas y restas b√°sicas, una habilidad que ser√° √∫til para una variedad de tareas al construir software.\n\n\n\nM√°s c√°lculos\nPython puede realizar c√°lculos m√°s complejos, como multiplicaciones y divisiones. Ahora, realizar√°s estos c√°lculos e imprimir√°s sus resultados.\n\nInstrucciones\n\nImprime el resultado de 9 multiplicado por 2.\nImprime el resultado de dividir 120 enre 12.\n\n\n# Calculate and print 9 multiplied by 2\nprint(9 * 2)\n\n# Print the result of dividing 120 by 12\nprint(120 / 12)\n\n18\n10.0\n\n\nHasta ahora has trabajado con n√∫meros y aprendido lo b√°sico de la multiplicaci√≥n y la divisi√≥n.¬°Vamos a descubrir otros n√∫meros que no son enteros en el pr√≥ximo video!",
    "crumbs": [
      "Capitulos",
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Introducci√≥n a Python</span>"
    ]
  },
  {
    "objectID": "01_Introduccion_a_python.html#variables",
    "href": "01_Introduccion_a_python.html#variables",
    "title": "Introducci√≥n a Python",
    "section": "Variables",
    "text": "Variables\n\nEn Python los n√∫meros enteros se clasifican como enteros.\nLos n√∫meros decimales se clasifican como flotantes.\nPython no requiere que especifiquemos el tipo de datos de una variable.\nLa funci√≥n type() permite verificar qu√© tipo de datos es una variable.\n\n\ncustomer_age = 26\naccount_balance = 58.50\n\n# Print Data Type\nprint(type(customer_age))\nprint(type(account_balance))\n\n&lt;class 'int'&gt;\n&lt;class 'float'&gt;\n\n\n\nUn dato booleano solo puede tener dos valores posible:\n\nVerdadero\nFalso\n\n\n\nis_active_costumer = True\nprint(type(is_active_costumer))\n\n&lt;class 'bool'&gt;\n\n\n\nTrabajar con variables num√©ricas\nPython te permite establecer variables como n√∫meros enteros o n√∫meros con decimales. En este ejercicio, probar√°s a utilizar distintos valores num√©ricos para las variables.\n\nInstrucciones\n\nCrea una variable llamada account_balance con el valor 120.50.\nImprime la variable account_balance.\n\n\n# Age of a costumer\ncostumer_age = 27\n\n# Create account_balance variable\naccount_balance = 120.5\n\n# Print account_balance\nprint(account_balance)\n\n120.5\n\n\nEn el pr√≥ximo ejercicio, aprender√°s sobre la reutilizaci√≥n de variables y tambi√©n aprender√°s m√°s sobre tipos de datos.\n\n\n\nActualizar los valores de las variables\nLas variables pueden actualizarse para que posean nuevos valores en cualquier momento, para que puedas reutilizarlas eficazmente. Los valores booleanos solo pueden ser True o False, similar a S√≠/No.\n¬°Al cliente le ha tocado la loter√≠a! Actualiza las variables account_balance e is_millionaire para que reflejen su nuevo estado.\n\nInstrucciones\n\nActualiza el account_balance para que sea 1300000.00.\nActualiza la variable is_millionaire para que sea True.\nImprime la variable is_millionaire para ver su valor booleano actualizado.\n\n\naccount_balance = 20000.00\nis_millionaire = False\n\n# Update acoount balance\naccount_balance = 1300000.00\n# Update is_millionaire variable\nis_millionaire = True\n\nprint(account_balance)\nprint(is_millionaire)\n\n1300000.0\nTrue\n\n\nAhora has aprendido a actualizar variables, trabajar con valores booleanos y has trabajado con algunos tipos de datos. En el siguiente paso, aprender√°s a determinar internamente el tipo de datos de cada variable seg√∫n lo establecido por Python.\n\n\n\nComprobaci√≥n de los tipos de datos\nPython nos facilita la vida al inferir el tipo de dato de las variables con las que trabajas, evitando la necesidad de declarar el tipo de datos expl√≠citamente.\nPractiquemos la comprobaci√≥n del tipo de datos de distintos valores y variables. Tienes tres variables: customer_age, account_balance e is_millionaire, y aprender√°s a obtener sus tipos de datos.\n\nInstrucciones\n\nImprime el tipo de datos de la variable costumer_age.\n\n\ncostumer_age = 29\n\n# Print the data type of costumer_age\nprint(type(costumer_age))\n\n&lt;class 'int'&gt;\n\n\n\nImprime el tipo de datos de la variable account_balance.\n\n\ncustomer_age = 49\naccount_balance = 120078.89\n\n# Print the data type of account_balance\nprint(type(account_balance))\n\n&lt;class 'float'&gt;\n\n\n\nImprime el tipo de datos de la variable is_millionaire.\n\n\ncustomer_age = 49\naccount_balance = 120078.89\nis_millionaire = False\n\n# Print the data type of is_millionaire\nprint(type(is_millionaire))\n\n&lt;class 'bool'&gt;\n\n\nAprenderemos a lo largo del curso que ciertas tareas son posibles dependiendo de los tipos de datos con los que estamos trabajando, como c√°lculos o filtrado condicional, por lo que conocer el tipo de datos con los que estamos trabajando es extremadamente importante.",
    "crumbs": [
      "Capitulos",
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Introducci√≥n a Python</span>"
    ]
  },
  {
    "objectID": "02_Trabajar_con_tipos_de_datos.html",
    "href": "02_Trabajar_con_tipos_de_datos.html",
    "title": "Trabajar con tipos de datos",
    "section": "",
    "text": "Trabajar con cadenas\nAprende c√≥mo y cu√°ndo utilizar las estructuras de datos integradas en Python, como listas, diccionarios, conjuntos y tuplas.",
    "crumbs": [
      "Capitulos",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Trabajar con tipos de datos</span>"
    ]
  },
  {
    "objectID": "02_Trabajar_con_tipos_de_datos.html#trabajar-con-cadenas",
    "href": "02_Trabajar_con_tipos_de_datos.html#trabajar-con-cadenas",
    "title": "Trabajar con tipos de datos",
    "section": "",
    "text": "Las cadenas de caracteres estan en todas partes\n\nLas cadenas de caracteres se utilizan para:\n\nPerfiles de usuarios\nMotores de b√∫squeda\nModelos grandes de lenguaje",
    "crumbs": [
      "Capitulos",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Trabajar con tipos de datos</span>"
    ]
  }
]